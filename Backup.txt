### ShmooDude Feral and Guardian script
###
### Options:
# Interrupt - Suggests use of interuptting abilities, including stuns/knockbacks on non-boss targets.
#
# Not in Melee Range - Suggests movement abilities if available or a forward arrow if you're out of range.
#
# Ashamane's Frenzy as main action - Puts the Ashamane's Frenzy suggestion in the main action box.
#       Requires TimeToDie of 20 seconds or more
#       If this is off, Ovale will not suggest Healing Touch at 2 Combo Points.
# Shadowmeld as main action - Puts the Shadowmeld suggestion in the main action box.
#       Requires TimeToDie of 15 seconds or more
#       Suggested off except on (raid) bosses.
# Tiger's Fury multiplier prediction - Applies the Tiger's Fury multiplier if Tiger's Fury is ready.
#       e.g. If TF is being suggested, any Rip suggestions will assume you use TF first.
# Only suggest Brutal Slash when Tiger's Fury is up
#       Good for Mythic+ to get the most damage out of your charges.
#       The setting below will ignore SR/TF constraints and suggest BS at 3 charges regardless.
# Always use BS at 3 charges - Will suggest Brutal Slash if you are about to reach max charges.
#       Advantage: Helps not waste charges.  
#       Disadvantage: Will probably not have 3 charges when AoE for the encounter shows up.
# Min targets to suggest Brutal Slash - Minimum number of targets to suggest using Brutal Slash.
#       This will use all available Brutal Slash charges.
#       Following setting will affect when these are used.

Include(ovale_common)
Include(ovale_trinkets_mop)
Include(ovale_trinkets_wod)
Include(ovale_druid_spells)

# Temporary Defines till next Ovale version
Define(ashamanes_energy_buff 210583)
    SpellInfo(ashamanes_energy_buff duration=3)
    SpellAddBuff(tigers_fury ashamanes_energy_buff=1)
Define(scent_of_blood_buff 210664)
    SpellInfo(scent_of_blood_buff duration=4)
    SpellAddBuff(thrash_cat scent_of_blood_buff=1)
Define(luffa_wrappings 137056)
Define(fiery_red_maimers_buff 236757)

AddCheckBox(opt_interrupt L(interrupt) default specialization=feral)
AddCheckBox(opt_melee_range L(not_in_melee_range) specialization=feral)
AddCheckBox(opt_druid_feral_aoe L(AOE) default specialization=feral)

AddCheckBox(opt_ashamanes_frenzy_main_action "Ashamane's Frenzy as a main action" default specialization=feral)
AddCheckBox(opt_shadowmeld_main_action "Shadowmeld as a main action" specialization=feral)

AddCheckBox(opt_tigers_fury_multiplier_predict "Tiger's Fury multiplier prediction" default specialization=feral)

AddCheckBox(opt_brutal_slash_use_at_three_always "Always use BS at 3 charges" specialization=feral)
AddCheckBox(opt_burtal_slash_use_with_tigers_fury "Only suggest BS when TF is up" specialization=feral)
AddCheckBox(opt_single_target_thrash "Single Target Thrash" specialization=feral)

AddListItem(opt_desired_targets dt_2 "Min targets to suggest Brutal Slash = 2" specialization=feral)
AddListItem(opt_desired_targets dt_3 "Min targets to suggest Brutal Slash = 3" specialization=feral default)
AddListItem(opt_desired_targets dt_4 "Min targets to suggest Brutal Slash = 4" specialization=feral)
AddListItem(opt_desired_targets dt_5 "Min targets to suggest Brutal Slash = 5" specialization=feral)
AddListItem(opt_desired_targets dt_6 "Min targets to suggest Brutal Slash = 6" specialization=feral)
AddListItem(opt_desired_targets dt_7 "Min targets to suggest Brutal Slash = 7" specialization=feral)
AddListItem(opt_desired_targets dt_8 "Min targets to suggest Brutal Slash = 8" specialization=feral)
AddListItem(opt_desired_targets dt_9 "Min targets to suggest Brutal Slash = 9" specialization=feral)


#################
### Variables ###
#################

#variable,name=shred_conditions,value=combo_points<5&((dot.rake.remains>(action.shred.cost+action.rake.cost-energy)%energy.regen)|variable.clearcasting_or_high_energy)
AddFunction shred_conditions
{
    ComboPoints() < 5 and { target.DebuffRemaining(rake_debuff) > { PowerCost(shred) + PowerCost(rake) - Energy() } / EnergyRegenRate() or clearcasting_or_high_energy() }
}

#variable,name=rake_refresh,value=7
#variable,name=rake_refresh,value=4.5-talent.jagged_wounds.enabled*1.485,if=equipped.ailuro_pouncers|talent.soul_of_the_forest.enabled
AddFunction rake_refresh
{
    if HasEquippedItem(ailuro_pouncers) or Talent(soul_of_the_forest_talent) 4.5 - TalentPoints(jagged_wounds_talent) * 1.485
    7
}

#variable,name=high_energy,value=buff.berserk.up|buff.incarnation.up|cooldown.tigers_fury.remains<3|talent.soul_of_the_forest.enabled|energy.time_to_max<variable.pooling
AddFunction high_energy
{
    BuffPresent(berserk_cat_buff) 
        or BuffPresent(incarnation_king_of_the_jungle_buff) 
        or SpellCooldown(tigers_fury) < 3 
        or Talent(soul_of_the_forest_talent) 
        or TimeToMaxEnergy() < pooling()
}

#variable,name=thrash_energy_pooling,value=(!dot.thrash_cat.ticking|$(clearcasting_or_high_energy))
AddFunction thrash_energy_pooling
{
    not target.DebuffPresent(thrash_cat_debuff) or clearcasting_or_high_energy()
}

#variable,name=swipe_energy_pooling,value=(buff.scent_of_blood.up|variable.clearcasting_or_high_energy)
AddFunction swipe_energy_pooling
{
    BuffPresent(scent_of_blood_buff) 
        or clearcasting_or_high_energy()
}

#variable,name=clearcasting_or_high_energy,value=(variable.high_energy|buff.clearcasting.react)
AddFunction clearcasting_or_high_energy
{
    high_energy() 
        or BuffPresent(clearcasting_buff)
}

#variable,name=buff_savage_roar_up,value=(buff.savage_roar.up|!talent.savage_roar.enabled)
AddFunction buff_savage_roar_up
{
    BuffPresent(savage_roar_buff) 
        or not Talent(savage_roar_talent)
}

#variable,name=rip_refresh,value=8
AddFunction rip_refresh
{
    8
}

#variable,name=pooling,value=3
#variable,name=pooling,value=10,if=equipped.chatoyant_signet
AddFunction pooling
{
    if HasEquippedItem(chatoyant_signet) 10
    3
}

#variable,name=regrowth_conditions,value=(talent.bloodtalons.enabled&buff.predatory_swiftness.up&((buff.bloodtalons.stack<2&!equipped.ailuro_pouncers)|buff.bloodtalons.down))
AddFunction regrowth_conditions
{
    Talent(bloodtalons_talent) 
        and BuffPresent(predatory_swiftness_buff) 
        and BuffStacks(bloodtalons_buff) < bt_stack()
}

#variable,name=finisher_conditions,value=(combo_points=5&(variable.high_energy|buff.elunes_guidance.up|cooldown.ashamanes_frenzy.remains<1|!dot.rip.ticking|(dot.rake.remains<1.5&spell_targets.swipe_cat<6)|(spell_targets.brutal_slash>desired_targets&talent.brutal_slash.enabled)))
AddFunction finisher_conditions
{
    ComboPoints() == 5 
        and { high_energy() 
            or BuffPresent(elunes_guidance_buff) 
            or SpellCooldown(ashamanes_frenzy) < 1 
            or not target.DebuffPresent(rip_debuff) 
            or target.DebuffRemaining(rake_debuff) < 1.5 and Enemies() < 6 
            or Enemies() > Enemies(tagged=1) and Talent(brutal_slash_talent) }
}

#variable,name=execute_range,value=25
#variable,name=execute_range,value=100,if=talent.sabertooth.enabled
AddFunction execute_range
{
    if Talent(sabertooth_talent) 100
    25
}

#variable,name=savage_roar_refresh,value=7.2
#variable,name=savage_roar_refresh,value=11,if=talent.jagged_wounds.enabled
AddFunction savage_roar_refresh
{
    if Talent(jagged_wounds_talent) 11
    7.2
}

#variable,name=bt_stack,value=1
#variable,name=bt_stack,value=2,if=equipped.ailuro_pouncers
AddFunction bt_stack
{
    if HasEquippedItem(ailuro_pouncers) 2
    1
}

#variable,name=buff_bloodtalons_up,value=(buff.bloodtalons.up|!talent.bloodtalons.enabled)
AddFunction buff_bloodtalons_up
{
    BuffPresent(bloodtalons_buff) 
        or not Talent(bloodtalons_talent)
}

#################
### Functions ###
#################

AddFunction FeralInterruptActions
{
    if CheckBoxOn(opt_interrupt) and not target.IsFriend() and target.Casting()
    {
        if target.InRange(skull_bash) and target.IsInterruptible() Spell(skull_bash)
        if target.InRange(mighty_bash) and not target.Classification(worldboss) Spell(mighty_bash)
        if target.InRange(maim) and not target.Classification(worldboss) Spell(maim)
        if target.Distance(less 5) and not target.Classification(worldboss) Spell(war_stomp)
        if target.Distance(less 15) and not target.Classification(worldboss) Spell(typhoon)
    }
}

AddFunction FeralUseItemActions
{
    Item(Trinket0Slot text=13 usable=1)
    Item(Trinket1Slot text=14 usable=1)
}

AddFunction FeralGetInMeleeRange
{
    if CheckBoxOn(opt_melee_range) and target.InRange(shred no)
    {
        #wild_charge
        if target.InRange(wild_charge) Spell(wild_charge)
        #displacer_beast,if=movement.distance>25
        if target.distance() > 25 Spell(displacer_beast)
        #dash,if=movement.distance>25&buff.displacer_beast.down&buff.wild_charge_movement.down
        if target.distance() > 25 and BuffExpires(displacer_beast_buff) Spell(dash)
        Texture(misc_arrowlup help=L(not_in_melee_range))
    }
}

AddFunction BrutalSlashDesiredTargetsOpt asvalue=1
{
    if List(opt_desired_targets dt_2) 2
    if List(opt_desired_targets dt_3) 3
    if List(opt_desired_targets dt_4) 4
    if List(opt_desired_targets dt_5) 5
    if List(opt_desired_targets dt_6) 6
    if List(opt_desired_targets dt_7) 7
    if List(opt_desired_targets dt_8) 8
    if List(opt_desired_targets dt_9) 9
}

AddFunction TFMultPred asvalue=1
{
    if CheckBoxOn(opt_tigers_fury_multiplier_predict) 
        and SpellCooldown(tigers_fury) <= 0
        and BuffExpires(clearcasting_buff) 
        and EnergyDeficit() >= 60 
            or EnergyDeficit() >= 80 
            or Talent(sabertooth_talent) 
                and target.DebuffExpires(rip_debuff) 
                and ComboPoints() == 5 
                and { BuffPresent(bloodtalons_buff) or not Talent(bloodtalons_talent) } 1.15
    1
}

###################################
### Begin Action List Functions ###
###################################

#call_action_list,name=opener,if=!dot.rip.ticking&time<15&talent.savage_roar.enabled&talent.jagged_wounds.enabled&talent.bloodtalons.enabled&desired_targets<=1
AddFunction FeralOpenerConditions
{
    not target.DebuffPresent(rip_debuff) 
        and TimeInCombat() < 15 
        and Talent(savage_roar_talent) 
        and Talent(jagged_wounds_talent) 
        and Talent(bloodtalons_talent) 
        and Enemies(tagged=1) <= 1
}

##### Opener Action List

##### End Opener

#rake,if=buff.prowl.up|buff.shadowmeld.up
AddFunction Rake_Prowl
{
    BuffPresent(prowl_buff) 
        or BuffPresent(shadowmeld_buff)
}

#berserk,if=buff.ashamanes_energy.up|(equipped.convergence_of_fates&energy>=35)
AddFunction Berserk
{
    BuffPresent(ashamanes_energy_buff) 
        or TigersFury() and SpellCooldown(tigers_fury) <= 0    
        or HasEquippedItem(convergence_of_fates) and Energy() >= 35
}

#incarnation,if=buff.ashamanes_energy.up|energy>=35
AddFunction Incarnation
{
    BuffPresent(ashamanes_energy_buff) 
        or TigersFury() and SpellCooldown(tigers_fury) <= 0
        or Energy() >= 35 
}

#tigers_fury,if=(!buff.clearcasting.react&energy.deficit>=60)|energy.deficit>=80
AddFunction TigersFury
{
    not BuffPresent(clearcasting_buff) and EnergyDeficit() >= 60 
        or EnergyDeficit() >= 80
}

#use_item,slot=trinket1,if=((buff.tigers_fury.up&(target.time_to_die>trinket.stat.any.cooldown|target.time_to_die<45))|buff.incarnation.remains>20)&!equipped.draught_of_souls
AddFunction Trinket
{
    { BuffPresent(tigers_fury_buff) and { target.TimeToDie() > BuffCooldownDuration(trinket_stat_any_buff) or target.TimeToDie() < 45 } 
        or BuffRemaining(incarnation_king_of_the_jungle_buff) > 20 } and not HasEquippedItem(draught_of_souls)
}

#ferocious_bite,cycle_targets=1,if=dot.rip.ticking&dot.rip.remains<3&target.time_to_die>3&target.health.pct<variable.execute_range
AddFunction FerociousBite_3SecondRefresh
{
    target.DebuffPresent(rip_debuff) 
        and target.DebuffRemaining(rip_debuff) < 3 
        and target.TimeToDie() > 3 
        and target.HealthPercent() < execute_range()
}


#run_action_list,name=incarn,if=buff.incarnation.up

##### Incarn Action List

#pool_resource,for_next=1
#thrash_cat,cycle_targets=1,if=remains<=duration*0.3&spell_targets.thrash_cat>=5
AddFunction ThrashCat_Incarn_5Targets
{
    target.DebuffRemaining(thrash_cat_debuff) <= BaseDuration(thrash_cat_debuff) * 0.3 
        and Enemies() >= 5
}

#regrowth,if=talent.bloodtalons.enabled&buff.predatory_swiftness.up&buff.bloodtalons.down&(buff.predatory_swiftness.remains<1.5|((!dot.rip.ticking|(dot.rip.remains<(4.8+gcd)&target.health.pct>25&talent.jagged_wounds.enabled)|(dot.rip.remains<(7.2+gcd)&target.health.pct>25&talent.elunes_guidance.enabled)|action.rip.persistent_multiplier>dot.rip.pmultiplier)&target.time_to_die-dot.rip.remains>action.rip.tick_time*4&combo_points=5))
AddFunction Regrowth_Expires_AF_EG_Incarn
{
    Talent(bloodtalons_talent) 
        and BuffPresent(predatory_swiftness_buff) 
        and BuffExpires(bloodtalons_buff) 
        and { BuffRemaining(predatory_swiftness_buff) < 1.5 
            or { not target.DebuffPresent(rip_debuff) 
                    or target.DebuffRemaining(rip_debuff) < 4.8 + GCD() and target.HealthPercent() > 25 and Talent(jagged_wounds_talent) 
                    or target.DebuffRemaining(rip_debuff) < 7.2 + GCD() and target.HealthPercent() > 25 and Talent(elunes_guidance_talent) 
                    or PersistentMultiplier(rip_debuff) > target.DebuffPersistentMultiplier(rip_debuff) } 
                and target.TimeToDie() - target.DebuffRemaining(rip_debuff) > target.TickTime(rip_debuff) * 4 
                and ComboPoints() == 5 }
}

#pool_resource,for_next=1
#swipe_cat,if=spell_targets.swipe_cat>=8
# No Function Necessary

#pool_resource,for_next=1
#rip,cycle_targets=1,if=(!ticking|(remains<4.8&target.health.pct>25&talent.jagged_wounds.enabled)|(remains<7.2&target.health.pct>25&talent.elunes_guidance.enabled)|persistent_multiplier>dot.rip.pmultiplier)&target.time_to_die-dot.rip.remains>tick_time*4&combo_points=5
AddFunction Rip_Incarn
{
    { not target.DebuffPresent(rip_debuff) 
            or target.DebuffRemaining(rip_debuff) < 4.8 and target.HealthPercent() > 25 and Talent(jagged_wounds_talent) 
            or target.DebuffRemaining(rip_debuff) < 7.2 and target.HealthPercent() > 25 and Talent(elunes_guidance_talent) 
            or PersistentMultiplier(rip_debuff) > target.DebuffPersistentMultiplier(rip_debuff) } 
        and target.TimeToDie() - target.DebuffRemaining(rip_debuff) > target.TickTime(rip_debuff) * 4 
        and ComboPoints() == 5
}

#swipe_cat,if=combo_points=5&(spell_targets.swipe_cat>=6|(spell_targets.swipe_cat>=3&!talent.bloodtalons.enabled))&combo_points=5
AddFunction SwipeCat_Incarn_5Targets
{
    ComboPoints() == 5 
        and { Enemies() >= 6 
            or Enemies() >= 3 and not Talent(bloodtalons_talent) } 
}

#regrowth,if=talent.bloodtalons.enabled&buff.predatory_swiftness.up&buff.bloodtalons.down&combo_points=5&(dot.rip.remains<=(4.8+5*gcd)|cooldown.ashamanes_frenzy.remains<gcd)
AddFunction Regrowth_Incarn_5CPs 
{
    Talent(bloodtalons_talent) 
        and BuffPresent(predatory_swiftness_buff) 
        and BuffExpires(bloodtalons_buff) 
        and ComboPoints() == 5 
        and { target.DebuffRemaining(rip_debuff) <= 4.8 + 5 * GCD() 
            or SpellCooldown(ashamanes_frenzy) < GCD() }
}

#maim,if=talent.bloodtalons.enabled&combo_points=5&buff.fiery_red_maimers.up&(dot.rip.remains<=(4.8+4*gcd)|cooldown.ashamanes_frenzy.remains<gcd)
AddFunction Maim_Incarn
{
    Talent(bloodtalons_talent) 
        and ComboPoints() == 5 
        and BuffPresent(fiery_red_maimers_buff) 
        and { target.DebuffRemaining(rip_debuff) <= 4.8 + 4 * GCD() 
            or SpellCooldown(ashamanes_frenzy) < GCD() }
}

#ferocious_bite,cycle_targets=1,if=talent.bloodtalons.enabled&combo_points=5&(dot.rip.remains<=(4.8+4*gcd)|cooldown.ashamanes_frenzy.remains<gcd)
AddFunction FerociousBite_Incarn
{
    Talent(bloodtalons_talent) 
        and ComboPoints() == 5 
        and { target.DebuffRemaining(rip_debuff) <= 4.8 + 4 * GCD() 
            or SpellCooldown(ashamanes_frenzy) < GCD() }
}

#call_action_list,name=maintain

#shred

##### End Incarnation

#For Short Cooldown
#regrowth,if=variable.regrowth_conditions&combo_points=2&buff.bloodtalons.down&cooldown.ashamanes_frenzy.remains<gcd&(buff.savage_roar.remains>gcd|!talent.savage_roar.enabled)
AddFunction Regrowth_AshamanesFrenzy
{
    CheckBoxOff(opt_ashamanes_frenzy_main_action)
        and regrowth_conditions() 
        and ComboPoints() == 2 
        and BuffExpires(bloodtalons_buff) 
        and SpellCooldown(ashamanes_frenzy) < GCD() 
        and { BuffRemaining(savage_roar_buff) > GCD() or not Talent(savage_roar_talent) } 
        and target.TimeToDie() > 15 
}

#regrowth,if=variable.regrowth_conditions&(buff.predatory_swiftness.remains<1.5|(combo_points=2&buff.bloodtalons.down&cooldown.ashamanes_frenzy.remains<gcd&(buff.savage_roar.remains>gcd|!talent.savage_roar.enabled)))
AddFunction Regrowth_Expires_AF_EG
{
    regrowth_conditions() 
        and { BuffRemaining(predatory_swiftness_buff) < 1.5 
            or ComboPoints() == 2 
                and BuffExpires(bloodtalons_buff) 
                and SpellCooldown(ashamanes_frenzy) < GCD() 
                and { BuffRemaining(savage_roar_buff) > GCD() or not Talent(savage_roar_talent) } 
            }
}

#ashamanes_frenzy,if=combo_points<=2&buff.elunes_guidance.down&variable.buff_bloodtalons_up&variable.buff_savage_roar_up
AddFunction AshamanesFrenzy
{
    ComboPoints() <= 2 
        and BuffExpires(elunes_guidance_buff) 
        and buff_bloodtalons_up() 
        and buff_savage_roar_up()
        and target.TimeToDie() > 15 
}


#shadowmeld,if=combo_points<5&energy>=action.rake.cost&dot.rake.pmultiplier<2.1&buff.tigers_fury.up&variable.buff_savage_roar_up&variable.buff_bloodtalons_up&(!talent.incarnation.enabled|cooldown.incarnation.remains>18)&!buff.incarnation.up
AddFunction Shadowmeld
{
    ComboPoints() < 5 
        and Energy() >= PowerCost(rake) 
        and target.DebuffPersistentMultiplier(rake_debuff) < 2.1 
        and BuffPresent(tigers_fury_buff) 
        and buff_savage_roar_up() 
        and buff_bloodtalons_up() 
        and { not Talent(incarnation_talent) or SpellCooldown(incarnation_king_of_the_jungle) > 18 } 
        and not BuffPresent(incarnation_king_of_the_jungle_buff)
}

#regrowth,if=talent.bloodtalons.enabled&combo_points=5&buff.bloodtalons.down&!dot.rip.ticking
AddFunction Regrowth_Hardcast
{
    CheckBoxOn(opt_hardcast_regrowth)
        and Talent(bloodtalons_talent) 
        and ComboPoints() == 5 
        and BuffExpires(bloodtalons_buff) 
        and not target.DebuffPresent(rip_debuff)
}

#call_action_list,name=elunes_guidance,if=talent.elunes_guidance.enabled

##### ElunesGuidance Action List

#regrowth,if=variable.regrowth_conditions&talent.elunes_guidance.enabled&((cooldown.elunes_guidance.remains<gcd&combo_points=0)|(buff.elunes_guidance.up&combo_points>=4))
AddFunction Regrowth_ElunesGuidance 
{
    regrowth_conditions() 
        and { SpellCooldown(elunes_guidance) < GCD() and ComboPoints() == 0 
            or BuffPresent(elunes_guidance_buff) and ComboPoints() >= 4 }
}
    
#pool_resource,if=talent.elunes_guidance.enabled&combo_points=0&energy<action.ferocious_bite.cost+25-energy.regen*cooldown.elunes_guidance.remains
AddFunction ElunesGuidance_Pooling
{
    ComboPoints() == 0 
        and Energy() < PowerCost(ferocious_bite) + 25 - EnergyRegenRate() * SpellCooldown(elunes_guidance)
}

#elunes_guidance,if=talent.elunes_guidance.enabled&combo_points=0&energy>=action.ferocious_bite.cost+25
AddFunction ElunesGuidance 
{
    ComboPoints() == 0 
        and Energy() >= PowerCost(ferocious_bite) + 25
}

##### End ElunesGuidance

#call_action_list,name=sbt_opener,if=talent.sabertooth.enabled&time<20
AddFunction SbtOpenerConditions
{
    Talent(sabertooth_talent) 
        and TimeInCombat() < 20
}

##### SbtOpener Action List

##### End SbtOpener

#regrowth,if=variable.regrowth_conditions&buff.savage_roar.down&combo_points=5
AddFunction Regrowth_SR_Expired
{
    regrowth_conditions() 
        and BuffExpires(savage_roar_buff) 
        and ComboPoints() == 5
}

#pool_resource,for_next=1
#savage_roar,if=buff.savage_roar.down&(variable.finisher_conditions|time<8)
AddFunction SavageRoar_Expired
{
    BuffExpires(savage_roar_buff) 
        and { finisher_conditions() or TimeInCombat() < 8 }
}

#regrowth,if=equipped.ailuro_pouncers&talent.bloodtalons.enabled&(buff.predatory_swiftness.stack>2|(buff.predatory_swiftness.stack>1&dot.rake.remains<3))&buff.bloodtalons.down
AddFunction Regrowth_Pouncers
{
    HasEquippedItem(ailuro_pouncers) 
        and Talent(bloodtalons_talent) 
        and { BuffStacks(predatory_swiftness_buff) > 2 
            or BuffStacks(predatory_swiftness_buff) > 1 and target.DebuffRemaining(rake_debuff) < 3 } 
        and BuffExpires(bloodtalons_buff)
}

#call_action_list,name=aoe_finisher,if=active_enemies>1
##### AoeFinisher Action List

#savage_roar,if=talent.brutal_slash.enabled&buff.savage_roar.down&spell_targets.brutal_slash>desired_targets&action.brutal_slash.charges>0
AddFunction SavageRoar_ForBrutalSlash
{
    Talent(brutal_slash_talent) 
        and BuffExpires(savage_roar_buff) 
        and Enemies() > Enemies(tagged=1) 
        and Charges(brutal_slash) > 0
}

#pool_resource,for_next=1
#thrash_cat,cycle_targets=1,if=spell_targets.thrash_cat>=5&remains<=duration*0.3&variable.thrash_energy_pooling
AddFunction ThrashCat_5Targets
{
    Enemies() >= 5 
        and target.DebuffRemaining(thrash_cat_debuff) <= BaseDuration(thrash_cat_debuff) * 0.3 
        and thrash_energy_pooling()
}

#pool_resource,for_next=1
#swipe_cat,if=spell_targets.swipe_cat>=8&variable.swipe_energy_pooling
AddFunction SwipeCat_8Targets
{
    Enemies() >= 8 
        and swipe_energy_pooling()
}

#regrowth,if=variable.regrowth_conditions&combo_points=5
AddFunction Regrowth_5CPs
{
    regrowth_conditions() 
        and ComboPoints() == 5
}

#pool_resource,for_next=1
#maim,if=buff.fiery_red_maimers.up&spell_targets.swipe_cat>=3&variable.buff_savage_roar_up&variable.buff_bloodtalons_up
AddFunction Maim_3Targets
{
    BuffPresent(fiery_red_maimers_buff) 
        and Enemies() >= 3 
        and buff_savage_roar_up() 
        and buff_bloodtalons_up()
}
##### End AoeFinisher

#call_action_list,name=finisher,if=variable.finisher_conditions
##### Finisher Action List

#rip,cycle_targets=1,if=(!ticking|(remains<variable.rip_refresh&target.health.pct>variable.execute_range)|persistent_multiplier>dot.rip.pmultiplier)&target.time_to_die-remains>tick_time*4
AddFunction Rip
{
    { not target.DebuffPresent(rip_debuff) 
            or target.DebuffRemaining(rip_debuff) < rip_refresh() and target.HealthPercent() > execute_range() 
            or PersistentMultiplier(rip_debuff) > target.DebuffPersistentMultiplier(rip_debuff) } 
        and target.TimeToDie() - target.DebuffRemaining(rip_debuff) > target.TickTime(rip_debuff) * 4
}

#pool_resource,for_next=1
#ferocious_bite,max_energy=1,cycle_targets=1,if=dot.rip.remains<variable.rip_refresh&target.health.pct<variable.execute_range
AddFunction FerociousBite_9SecondRefresh
{
    target.DebuffRemaining(rip_debuff) < rip_refresh() 
        and target.HealthPercent() < execute_range()
}

#pool_resource,for_next=1
#savage_roar,if=(buff.savage_roar.remains<=7.2|(buff.savage_roar.remains<variable.savage_roar_refresh&target.health.pct>=25))
AddFunction SavageRoar_Refresh
{
    BuffRemaining(savage_roar_buff) <= 7.2 
        or BuffRemaining(savage_roar_buff) < savage_roar_refresh() and target.HealthPercent() >= 25
}

#pool_resource,for_next=1
#maim,if=buff.fiery_red_maimers.up&variable.buff_bloodtalons_up&variable.buff_savage_roar_up
AddFunction Maim
{
    BuffPresent(fiery_red_maimers_buff) 
        and buff_bloodtalons_up() 
        and buff_savage_roar_up()
}

#pool_resource,for_next=1
#ferocious_bite,max_energy=1

##### End Finisher

#call_action_list,name=generator
##### Generator Action List

#brutal_slash,if=spell_targets.brutal_slash>desired_targets&combo_points<5
AddFunction BrutalSlash_DesiredTargets
{
    Enemies() > BrutalSlashDesiredTargetsOpt() 
        and ComboPoints() < 5
}
#pool_resource,for_next=1
#thrash_cat,if=talent.brutal_slash.enabled&spell_targets.thrash_cat>=9&variable.thrash_energy_pooling
AddFunction ThrashCat_BrutalSlashTalent
{
    Talent(brutal_slash_talent) 
        and Enemies() >= 9 
        and thrash_energy_pooling()
}

#pool_resource,for_next=1
#swipe_cat,if=spell_targets.swipe_cat>=6&variable.swipe_energy_pooling
AddFunction SwipeCat_6Targets 
{
    Enemies() >= 6 
        and swipe_energy_pooling()
}

#call_action_list,name=maintain,if=combo_points<5

#pool_resource,for_next=1
#thrash_cat,cycle_targets=1,if=remains<=duration*0.3&combo_points<5&spell_targets.thrash_cat>=2&variable.thrash_energy_pooling
AddFunction ThrashCat_2Targets 
{
    target.DebuffRemaining(thrash_cat_debuff) <= BaseDuration(thrash_cat_debuff) * 0.3 
        and ComboPoints() < 5 
        and Enemies() >= 2 
        and thrash_energy_pooling()
}

#brutal_slash,if=combo_points<5&((raid_event.adds.exists&raid_event.adds.in>(1+max_charges-charges_fractional)*15)|(!raid_event.adds.exists&(charges_fractional>2.66&time>10)))
# Function: BrutalSlash_UnderDesiredTargets

#swipe_cat,if=combo_points<5&spell_targets.swipe_cat>=3&variable.swipe_energy_pooling
AddFunction SwipeCat_3Targets
{
    ComboPoints() < 5 
        and Enemies() >= 3 
        and swipe_energy_pooling()
}


#shred,if=(spell_targets.swipe_cat<3|talent.brutal_slash.enabled)&variable.shred_conditions
AddFunction Shred
{
    { Enemies() < 3 or Talent(brutal_slash_talent) } 
        and shred_conditions()
}
##### End Generator

#call_action_list,name=maintain,if=combo_points<5
##### Maintain Action List

##### End Maintain

#brutal_slash,if=combo_points<5&((raid_event.adds.exists&raid_event.adds.in>(1+max_charges-charges_fractional)*15)|(!raid_event.adds.exists&(charges_fractional>2.66&time>10)))
AddFunction BrutalSlash_UnderDesiredTargets
{
    CheckBoxOn(opt_brutal_slash_use_at_three_always)
        and ComboPoints() < 5 
        and Charges(brutal_slash count=0) > 2.66 
        and TimeInCombat() > 10 
}

#use_item,slot=trinket1,if=variable.buff_savage_roar_up&equipped.draught_of_souls
AddFunction DraughtOfSouls
{
    buff_savage_roar_up() 
        and HasEquippedItem(draught_of_souls)
}
### actions.default

AddFunction FeralDefaultMainActions
{

    #dash,if=!buff.cat_form.up
    if not BuffPresent(cat_form_buff) Spell(dash)

    #cat_form
    Spell(cat_form)
    
    #variable,name=high_energy,value=buff.berserk.up|buff.incarnation.up|cooldown.tigers_fury.remains<3|talent.soul_of_the_forest.enabled|energy.time_to_max<variable.pooling
    #variable,name=finisher_conditions,value=(combo_points=5&(variable.high_energy|buff.elunes_guidance.up|cooldown.ashamanes_frenzy.remains<1|!dot.rip.ticking|(dot.rake.remains<1.5&spell_targets.swipe_cat<6)|(spell_targets.brutal_slash>desired_targets&talent.brutal_slash.enabled)))
    #variable,name=clearcasting_or_high_energy,value=(variable.high_energy|buff.clearcasting.react)
    #variable,name=thrash_energy_pooling,value=(!dot.thrash_cat.ticking|variable.clearcasting_or_high_energy)
    #variable,name=swipe_energy_pooling,value=(buff.scent_of_blood.up|variable.clearcasting_or_high_energy)
    #variable,name=buff_savage_roar_up,value=(buff.savage_roar.up|!talent.savage_roar.enabled)
    #variable,name=buff_bloodtalons_up,value=(buff.bloodtalons.up|!talent.bloodtalons.enabled)
    #variable,name=regrowth_conditions,value=(talent.bloodtalons.enabled&buff.predatory_swiftness.up&buff.bloodtalons.stack<variable.bt_stack)
    #variable,name=shred_conditions,value=combo_points<5&((dot.rake.remains>(action.shred.cost+action.rake.cost-energy)%energy.regen)|variable.clearcasting_or_high_energy)
    
    #call_action_list,name=opener,if=!dot.rip.ticking&time<15&talent.savage_roar.enabled&talent.jagged_wounds.enabled&talent.bloodtalons.enabled&desired_targets<=1
    if FeralOpenerConditions() FeralOpenerMainActions()

    unless FeralOpenerConditions() and FeralOpenerMainPostConditions()
    {
        #rake,if=buff.prowl.up|buff.shadowmeld.up
        if Rake_Prowl() Spell(rake)
        #ferocious_bite,cycle_targets=1,if=dot.rip.ticking&dot.rip.remains<3&target.time_to_die>3&target.health.pct<variable.execute_range
        if FerociousBite_3SecondRefresh() Spell(ferocious_bite)
        #run_action_list,name=incarn,if=buff.incarnation.up
        if BuffPresent(incarnation_king_of_the_jungle_buff) FeralIncarnMainActions()

        unless BuffPresent(incarnation_king_of_the_jungle_buff) and FeralIncarnMainPostConditions()
        {
            #regrowth,if=variable.regrowth_conditions&(buff.predatory_swiftness.remains<1.5|(combo_points=2&buff.bloodtalons.down&cooldown.ashamanes_frenzy.remains<gcd&(buff.savage_roar.remains>gcd|!talent.savage_roar.enabled)))
            if Regrowth_Expires_AF_EG() Spell(regrowth)
            #regrowth,if=talent.bloodtalons.enabled&combo_points=5&buff.bloodtalons.down&!dot.rip.ticking
            if Regrowth_Hardcast() Spell(regrowth text="Hardcast")
            #ashamanes_frenzy,if=combo_points<=2&buff.elunes_guidance.down&variable.buff_bloodtalons_up&variable.buff_savage_roar_up
            if CheckBoxOn(opt_ashamanes_frenzy_main_action) and AshamanesFrenzy() Spell(ashamanes_frenzy)
            #shadowmeld,if=combo_points<5&energy>=action.rake.cost&dot.rake.pmultiplier<2.1&buff.tigers_fury.up&variable.buff_savage_roar_up&variable.buff_bloodtalons_up&(!talent.incarnation.enabled|cooldown.incarnation.remains>18)&!buff.incarnation.up
            if CheckBoxOn(opt_shadowmeld_main_action) and Shadowmeld() Spell(shadowmeld)
            #call_action_list,name=elunes_guidance,if=talent.elunes_guidance.enabled
            if Talent(elunes_guidance_talent) FeralElunesGuidanceMainActions()

            unless Talent(elunes_guidance_talent) and FeralElunesGuidanceMainPostConditions()
            {
                #call_action_list,name=sbt_opener,if=talent.sabertooth.enabled&time<20
                if SbtOpenerConditions() FeralSbtOpenerMainActions()

                unless SbtOpenerConditions() and FeralSbtOpenerMainPostConditions()
                {
                    #regrowth,if=variable.regrowth_conditions&buff.savage_roar.down&combo_points=5
                    if Regrowth_SR_Expired() Spell(regrowth)
                    #pool_resource,for_next=1
                    #savage_roar,if=buff.savage_roar.down&(variable.finisher_conditions|time<8)
                    if SavageRoar_Expired() Spell(savage_roar)
                    unless SavageRoar_Expired() and SpellUsable(savage_roar) and SpellCooldown(savage_roar) < TimeToEnergyFor(savage_roar)
                    {
                        #regrowth,if=equipped.ailuro_pouncers&talent.bloodtalons.enabled&(buff.predatory_swiftness.stack>2|(buff.predatory_swiftness.stack>1&dot.rake.remains<3))&buff.bloodtalons.down
                        if Regrowth_Pouncers() Spell(regrowth)
                        #call_action_list,name=aoe_finisher,if=active_enemies>1
                        if Enemies() > 1 FeralAoeFinisherMainActions()

                        unless Enemies() > 1 and FeralAoeFinisherMainPostConditions()
                        {
                            #regrowth,if=variable.regrowth_conditions&combo_points=5
                            if Regrowth_5CPs() Spell(regrowth)
                            #call_action_list,name=finisher,if=variable.finisher_conditions
                            if finisher_conditions() FeralFinisherMainActions()

                            unless finisher_conditions() and FeralFinisherMainPostConditions()
                            {
                                #call_action_list,name=generator
                                FeralGeneratorMainActions()
                            }
                        }
                    }
                }
            }
        }
    }
}

AddFunction FeralDefaultMainPostConditions
{
    FeralOpenerConditions() 
        and FeralOpenerMainPostConditions() 
            or BuffPresent(incarnation_king_of_the_jungle_buff) 
        and FeralIncarnMainPostConditions() 
            or Talent(elunes_guidance_talent) 
        and FeralElunesGuidanceMainPostConditions() 
            or SbtOpenerConditions() 
        and FeralSbtOpenerMainPostConditions() 
            or not { SavageRoar_Expired() and SpellUsable(savage_roar) and SpellCooldown(savage_roar) < TimeToEnergyFor(savage_roar) } 
                and { Enemies() > 1 and FeralAoeFinisherMainPostConditions() 
                    or finisher_conditions() and FeralFinisherMainPostConditions() 
                    or FeralGeneratorMainPostConditions() }
}

AddFunction FeralDefaultShortCdActions
{
    unless Spell(cat_form)
    {
        #variable,name=high_energy,value=buff.berserk.up|buff.incarnation.up|cooldown.tigers_fury.remains<3|talent.soul_of_the_forest.enabled|energy.time_to_max<variable.pooling
        #variable,name=finisher_conditions,value=(combo_points=5&(variable.high_energy|buff.elunes_guidance.up|cooldown.ashamanes_frenzy.remains<1|!dot.rip.ticking|(dot.rake.remains<1.5&spell_targets.swipe_cat<6)|(spell_targets.brutal_slash>desired_targets&talent.brutal_slash.enabled)))
        #variable,name=clearcasting_or_high_energy,value=(variable.high_energy|buff.clearcasting.react)
        #variable,name=thrash_energy_pooling,value=(!dot.thrash_cat.ticking|variable.clearcasting_or_high_energy)
        #variable,name=swipe_energy_pooling,value=(buff.scent_of_blood.up|variable.clearcasting_or_high_energy)
        #variable,name=buff_savage_roar_up,value=(buff.savage_roar.up|!talent.savage_roar.enabled)
        #variable,name=buff_bloodtalons_up,value=(buff.bloodtalons.up|!talent.bloodtalons.enabled)
        #variable,name=regrowth_conditions,value=(talent.bloodtalons.enabled&buff.predatory_swiftness.up&buff.bloodtalons.stack<variable.bt_stack)
        #variable,name=shred_conditions,value=combo_points<5&((dot.rake.remains>(action.shred.cost+action.rake.cost-energy)%energy.regen)|variable.clearcasting_or_high_energy)
        #call_action_list,name=opener,if=!dot.rip.ticking&time<15&talent.savage_roar.enabled&talent.jagged_wounds.enabled&talent.bloodtalons.enabled&desired_targets<=1
        if FeralOpenerConditions() FeralOpenerShortCdActions()

        unless FeralOpenerConditions() and FeralOpenerShortCdPostConditions()
        {
            #wild_charge
            #displacer_beast,if=movement.distance>10
            FeralGetInMeleeRange()

            unless Rake_Prowl() and Spell(rake)
            {
                #auto_attack
                #potion,name=old_war,if=((buff.berserk.remains>10|buff.incarnation.remains>20)&(target.time_to_die<180|(trinket.proc.all.react&target.health.pct<25)))|target.time_to_die<=40
                #tigers_fury,if=(!buff.clearcasting.react&energy.deficit>=60)|energy.deficit>=80
                if TigersFury() Spell(tigers_fury)

                unless FerociousBite_3SecondRefresh() and Spell(ferocious_bite)
                {
                    #run_action_list,name=incarn,if=buff.incarnation.up
                    if BuffPresent(incarnation_king_of_the_jungle_buff) FeralIncarnShortCdActions()

                    unless BuffPresent(incarnation_king_of_the_jungle_buff) and FeralIncarnShortCdPostConditions() 
                        or Regrowth_Expires_AF_EG() and Spell(regrowth) 
                        or Regrowth_Hardcast() and Spell(regrowth)
                    {
                        #ashamanes_frenzy,if=combo_points<=2&buff.elunes_guidance.down&variable.buff_bloodtalons_up&variable.buff_savage_roar_up
                        if CheckBoxOff(opt_ashamanes_frenzy_main_action) and AshamanesFrenzy() Spell(ashamanes_frenzy)
                        #call_action_list,name=elunes_guidance,if=talent.elunes_guidance.enabled
                        if Talent(elunes_guidance_talent) FeralElunesGuidanceShortCdActions()

                        unless Talent(elunes_guidance_talent) and FeralElunesGuidanceShortCdPostConditions()
                        {
                            #call_action_list,name=sbt_opener,if=talent.sabertooth.enabled&time<20
                            if SbtOpenerConditions() FeralSbtOpenerShortCdActions()

                            unless SbtOpenerConditions() and FeralSbtOpenerShortCdPostConditions() 
                                or Regrowth_SR_Expired() and Spell(regrowth)
                            {
                                #pool_resource,for_next=1
                                #savage_roar,if=buff.savage_roar.down&(variable.finisher_conditions|time<8)
                                unless SavageRoar_Expired() and SpellUsable(savage_roar) and SpellCooldown(savage_roar) < TimeToEnergyFor(savage_roar)
                                {
                                    unless Regrowth_Pouncers() and Spell(regrowth)
                                    {
                                        #call_action_list,name=aoe_finisher,if=active_enemies>1
                                        if Enemies() > 1 FeralAoeFinisherShortCdActions()

                                        unless Enemies() > 1 and FeralAoeFinisherShortCdPostConditions() 
                                            or Regrowth_5CPs() and Spell(regrowth)
                                        {
                                            #call_action_list,name=finisher,if=variable.finisher_conditions
                                            if finisher_conditions() FeralFinisherShortCdActions()

                                            unless finisher_conditions() and FeralFinisherShortCdPostConditions()
                                            {
                                                #call_action_list,name=generator
                                                FeralGeneratorShortCdActions()
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

AddFunction FeralDefaultShortCdPostConditions
{
    Spell(cat_form) 
        or FeralOpenerConditions() and FeralOpenerShortCdPostConditions() 
        or Rake_Prowl() and Spell(rake) 
        or FerociousBite_3SecondRefresh() and Spell(ferocious_bite) 
        or BuffPresent(incarnation_king_of_the_jungle_buff) and FeralIncarnShortCdPostConditions() 
        or Regrowth_Expires_AF_EG() and Spell(regrowth) 
        or Regrowth_Hardcast() and Spell(regrowth) 
        or Talent(elunes_guidance_talent) and FeralElunesGuidanceShortCdPostConditions() 
        or SbtOpenerConditions() and FeralSbtOpenerShortCdPostConditions() 
        or Regrowth_SR_Expired() and Spell(regrowth) 
        or not { SavageRoar_Expired() 
                and SpellUsable(savage_roar) 
                and SpellCooldown(savage_roar) < TimeToEnergyFor(savage_roar) } 
            and { Regrowth_Pouncers() and Spell(regrowth) 
                or Enemies() > 1 and FeralAoeFinisherShortCdPostConditions() 
                or Regrowth_5CPs() and Spell(regrowth) 
                or finisher_conditions() and FeralFinisherShortCdPostConditions() 
                or FeralGeneratorShortCdPostConditions() }
}

AddFunction FeralDefaultCdActions
{
    unless Spell(cat_form)
    {
        #variable,name=high_energy,value=buff.berserk.up|buff.incarnation.up|cooldown.tigers_fury.remains<3|talent.soul_of_the_forest.enabled|energy.time_to_max<variable.pooling
        #variable,name=finisher_conditions,value=(combo_points=5&(variable.high_energy|buff.elunes_guidance.up|cooldown.ashamanes_frenzy.remains<1|!dot.rip.ticking|(dot.rake.remains<1.5&spell_targets.swipe_cat<6)|(spell_targets.brutal_slash>desired_targets&talent.brutal_slash.enabled)))
        #variable,name=clearcasting_or_high_energy,value=(variable.high_energy|buff.clearcasting.react)
        #variable,name=thrash_energy_pooling,value=(!dot.thrash_cat.ticking|variable.clearcasting_or_high_energy)
        #variable,name=swipe_energy_pooling,value=(buff.scent_of_blood.up|variable.clearcasting_or_high_energy)
        #variable,name=buff_savage_roar_up,value=(buff.savage_roar.up|!talent.savage_roar.enabled)
        #variable,name=buff_bloodtalons_up,value=(buff.bloodtalons.up|!talent.bloodtalons.enabled)
        #variable,name=regrowth_conditions,value=(talent.bloodtalons.enabled&buff.predatory_swiftness.up&buff.bloodtalons.stack<variable.bt_stack)
        #variable,name=shred_conditions,value=combo_points<5&((dot.rake.remains>(action.shred.cost+action.rake.cost-energy)%energy.regen)|variable.clearcasting_or_high_energy)
        #call_action_list,name=opener,if=!dot.rip.ticking&time<15&talent.savage_roar.enabled&talent.jagged_wounds.enabled&talent.bloodtalons.enabled&desired_targets<=1
        if FeralOpenerConditions() FeralOpenerCdActions()

        unless FeralOpenerConditions() and FeralOpenerCdPostConditions()
        {

            unless Rake_Prowl() and Spell(rake)
            {
                #skull_bash
                FeralInterruptActions()
                #berserk,if=buff.ashamanes_energy.up|(equipped.convergence_of_fates&energy>=35)
                if Berserk() Spell(berserk_cat)
                #incarnation,if=buff.ashamanes_energy.up|energy>=35
                if Incarnation() Spell(incarnation_king_of_the_jungle)
                #use_item,slot=trinket1,if=((buff.tigers_fury.up&(target.time_to_die>trinket.stat.any.cooldown|target.time_to_die<45))|buff.incarnation.remains>20)&!equipped.draught_of_souls
                if Trinket() FeralUseItemActions()

                unless FerociousBite_3SecondRefresh() and Spell(ferocious_bite)
                {
                    #run_action_list,name=incarn,if=buff.incarnation.up
                    if BuffPresent(incarnation_king_of_the_jungle_buff) FeralIncarnCdActions()

                    unless BuffPresent(incarnation_king_of_the_jungle_buff) and FeralIncarnCdPostConditions() 
                        or Regrowth_Expires_AF_EG() and Spell(regrowth) 
                        or Regrowth_Hardcast() and Spell(regrowth) 
                        or AshamanesFrenzy() and Spell(ashamanes_frenzy)
                    {
                        #shadowmeld,if=combo_points<5&energy>=action.rake.cost&dot.rake.pmultiplier<2.1&buff.tigers_fury.up&variable.buff_savage_roar_up&variable.buff_bloodtalons_up&(!talent.incarnation.enabled|cooldown.incarnation.remains>18)&!buff.incarnation.up
                        if CheckBoxOff(opt_shadowmeld_main_action) and Shadowmeld() Spell(shadowmeld)
                        #call_action_list,name=elunes_guidance,if=talent.elunes_guidance.enabled
                        if Talent(elunes_guidance_talent) FeralElunesGuidanceCdActions()

                        unless Talent(elunes_guidance_talent) and FeralElunesGuidanceCdPostConditions()
                        {
                            #call_action_list,name=sbt_opener,if=talent.sabertooth.enabled&time<20
                            if SbtOpenerConditions() FeralSbtOpenerCdActions()

                            unless SbtOpenerConditions() and FeralSbtOpenerCdPostConditions() or Regrowth_SR_Expired() and Spell(regrowth)
                            {
                                #pool_resource,for_next=1
                                #savage_roar,if=buff.savage_roar.down&(variable.finisher_conditions|time<8)
                                unless SavageRoar_Expired() and SpellUsable(savage_roar) and SpellCooldown(savage_roar) < TimeToEnergyFor(savage_roar)
                                {
                                    unless Regrowth_Pouncers() and Spell(regrowth)
                                    {
                                        #call_action_list,name=aoe_finisher,if=active_enemies>1
                                        if Enemies() > 1 FeralAoeFinisherCdActions()

                                        unless Enemies() > 1 and FeralAoeFinisherCdPostConditions() 
                                            or Regrowth_5CPs() and Spell(regrowth)
                                        {
                                            #call_action_list,name=finisher,if=variable.finisher_conditions
                                            if finisher_conditions() FeralFinisherCdActions()

                                            unless finisher_conditions() and FeralFinisherCdPostConditions()
                                            {
                                                #call_action_list,name=generator
                                                FeralGeneratorCdActions()
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

AddFunction FeralDefaultCdPostConditions
{
    Spell(cat_form) 
        or FeralOpenerConditions() and FeralOpenerCdPostConditions() 
        or Rake_Prowl() and Spell(rake) 
        or FerociousBite_3SecondRefresh() and Spell(ferocious_bite) 
        or BuffPresent(incarnation_king_of_the_jungle_buff) and FeralIncarnCdPostConditions() 
        or Regrowth_Expires_AF_EG() and Spell(regrowth) 
        or Regrowth_Hardcast() and Spell(regrowth) 
        or CheckBoxOn(opt_ashamanes_frenzy_main_action) and AshamanesFrenzy() and Spell(ashamanes_frenzy) 
        or Talent(elunes_guidance_talent) and FeralElunesGuidanceCdPostConditions() 
        or SbtOpenerConditions() and FeralSbtOpenerCdPostConditions() 
        or Regrowth_SR_Expired() and Spell(regrowth) 
        or not { SavageRoar_Expired() 
                and SpellUsable(savage_roar) 
                and SpellCooldown(savage_roar) < TimeToEnergyFor(savage_roar) } 
            and { Regrowth_Pouncers() and Spell(regrowth) 
                or Enemies() > 1 and FeralAoeFinisherCdPostConditions() 
                or Regrowth_5CPs() and Spell(regrowth) 
                or finisher_conditions() and FeralFinisherCdPostConditions() 
                or FeralGeneratorCdPostConditions()  }
}

### actions.aoe_finisher

AddFunction FeralAoeFinisherMainActions
{
    #pool_resource,for_next=1
    #savage_roar,if=talent.brutal_slash.enabled&buff.savage_roar.down&spell_targets.brutal_slash>desired_targets&action.brutal_slash.charges>0
    if SavageRoar_ForBrutalSlash() Spell(savage_roar)
    unless SavageRoar_ForBrutalSlash() and SpellUsable(savage_roar) and SpellCooldown(savage_roar) < TimeToEnergyFor(savage_roar)
    {
        #pool_resource,for_next=1
        #thrash_cat,cycle_targets=1,if=spell_targets.thrash_cat>=5&remains<=duration*0.3&variable.thrash_energy_pooling
        if ThrashCat_5Targets() Spell(thrash_cat)
        unless ThrashCat_5Targets() and SpellUsable(thrash_cat) and SpellCooldown(thrash_cat) < TimeToEnergyFor(thrash_cat)
        {
            #pool_resource,for_next=1
            #swipe_cat,if=spell_targets.swipe_cat>=8&variable.swipe_energy_pooling
            if SwipeCat_8Targets() Spell(swipe_cat)
            unless SwipeCat_8Targets() and SpellUsable(swipe_cat) and SpellCooldown(swipe_cat) < TimeToEnergyFor(swipe_cat)
            {
                #regrowth,if=variable.regrowth_conditions&combo_points=5
                if Regrowth_5CPs() Spell(regrowth)
                #pool_resource,for_next=1
                #maim,if=buff.fiery_red_maimers.up&spell_targets.swipe_cat>=3&variable.buff_savage_roar_up&variable.buff_bloodtalons_up
                if Maim_3Targets() Spell(maim)
            }
        }
    }
}

AddFunction FeralAoeFinisherMainPostConditions
{
}

AddFunction FeralAoeFinisherShortCdActions
{
}

AddFunction FeralAoeFinisherShortCdPostConditions
{
    SavageRoar_ForBrutalSlash() and Spell(savage_roar) or not { SavageRoar_ForBrutalSlash() and SpellUsable(savage_roar) and SpellCooldown(savage_roar) < TimeToEnergyFor(savage_roar) } 
        and { ThrashCat_5Targets() and Spell(thrash_cat) or not { ThrashCat_5Targets() and SpellUsable(thrash_cat) and SpellCooldown(thrash_cat) < TimeToEnergyFor(thrash_cat) } 
            and { SwipeCat_8Targets() and Spell(swipe_cat) or not { SwipeCat_8Targets() and SpellUsable(swipe_cat) and SpellCooldown(swipe_cat) < TimeToEnergyFor(swipe_cat) } 
                and { Regrowth_5CPs() and Spell(regrowth) or Maim_3Targets() and Spell(maim) } } }
}

AddFunction FeralAoeFinisherCdActions
{
}

AddFunction FeralAoeFinisherCdPostConditions
{
    SavageRoar_ForBrutalSlash() and Spell(savage_roar) or not { SavageRoar_ForBrutalSlash() and SpellUsable(savage_roar) and SpellCooldown(savage_roar) < TimeToEnergyFor(savage_roar) } 
        and { ThrashCat_5Targets() and Spell(thrash_cat) or not { ThrashCat_5Targets() and SpellUsable(thrash_cat) and SpellCooldown(thrash_cat) < TimeToEnergyFor(thrash_cat) } 
            and { SwipeCat_8Targets() and Spell(swipe_cat) or not { SwipeCat_8Targets() and SpellUsable(swipe_cat) and SpellCooldown(swipe_cat) < TimeToEnergyFor(swipe_cat) } 
                and { Regrowth_5CPs() and Spell(regrowth) or Maim_3Targets() and Spell(maim) } } }
}

### actions.generator

AddFunction FeralGeneratorMainActions
{
    #brutal_slash,if=spell_targets.brutal_slash>desired_targets&combo_points<5
    if BrutalSlash_DesiredTargets() Spell(brutal_slash)
    #pool_resource,for_next=1
    #thrash_cat,if=talent.brutal_slash.enabled&spell_targets.thrash_cat>=9&variable.thrash_energy_pooling
    if ThrashCat_BrutalSlashTalent() Spell(thrash_cat)
    unless ThrashCat_BrutalSlashTalent() and SpellUsable(thrash_cat) and SpellCooldown(thrash_cat) < TimeToEnergyFor(thrash_cat)
    {
        #pool_resource,for_next=1
        #swipe_cat,if=spell_targets.swipe_cat>=6&variable.swipe_energy_pooling
        if SwipeCat_6Targets() Spell(swipe_cat)
        unless SwipeCat_6Targets() and SpellUsable(swipe_cat) and SpellCooldown(swipe_cat) < TimeToEnergyFor(swipe_cat)
        {
            #call_action_list,name=maintain,if=combo_points<5
            if ComboPoints() < 5 FeralMaintainMainActions()

            unless ComboPoints() < 5 and FeralMaintainMainPostConditions()
            {
                #pool_resource,for_next=1
                #thrash_cat,cycle_targets=1,if=remains<=duration*0.3&combo_points<5&spell_targets.thrash_cat>=2&variable.thrash_energy_pooling
                if ThrashCat_2Targets() Spell(thrash_cat)
                unless ThrashCat_2Targets() and SpellUsable(thrash_cat) and SpellCooldown(thrash_cat) < TimeToEnergyFor(thrash_cat)
                {
                    #brutal_slash,if=combo_points<5&((raid_event.adds.exists&raid_event.adds.in>(1+max_charges-charges_fractional)*15)|(!raid_event.adds.exists&(charges_fractional>2.66&time>10)))
                    if BrutalSlash_UnderDesiredTargets() Spell(brutal_slash)
                    #swipe_cat,if=combo_points<5&spell_targets.swipe_cat>=3&variable.swipe_energy_pooling
                    if ComboPoints() < 5 and Enemies() >= 3 and swipe_energy_pooling() Spell(swipe_cat)
                    #shred,if=(spell_targets.swipe_cat<3|talent.brutal_slash.enabled)&variable.shred_conditions
                    if Shred() Spell(shred)
                }
            }
        }
    }
}

AddFunction FeralGeneratorMainPostConditions
{
    not { ThrashCat_BrutalSlashTalent() and SpellUsable(thrash_cat) and SpellCooldown(thrash_cat) < TimeToEnergyFor(thrash_cat) } 
        and not { SwipeCat_6Targets() and SpellUsable(swipe_cat) and SpellCooldown(swipe_cat) < TimeToEnergyFor(swipe_cat) } 
        and ComboPoints() < 5 and FeralMaintainMainPostConditions()
}

AddFunction FeralGeneratorShortCdActions
{
    unless BrutalSlash_DesiredTargets() and Spell(brutal_slash)
    {
        #pool_resource,for_next=1
        #thrash_cat,if=talent.brutal_slash.enabled&spell_targets.thrash_cat>=9&variable.thrash_energy_pooling
        unless ThrashCat_BrutalSlashTalent() and SpellUsable(thrash_cat) and SpellCooldown(thrash_cat) < TimeToEnergyFor(thrash_cat)
        {
            #pool_resource,for_next=1
            #swipe_cat,if=spell_targets.swipe_cat>=6&variable.swipe_energy_pooling
            unless SwipeCat_6Targets() and SpellUsable(swipe_cat) and SpellCooldown(swipe_cat) < TimeToEnergyFor(swipe_cat)
            {
                #call_action_list,name=maintain,if=combo_points<5
                if ComboPoints() < 5 FeralMaintainShortCdActions()
            }
        }
    }
}

AddFunction FeralGeneratorShortCdPostConditions
{
    BrutalSlash_DesiredTargets() and Spell(brutal_slash) 
        or not { ThrashCat_BrutalSlashTalent() and SpellUsable(thrash_cat) and SpellCooldown(thrash_cat) < TimeToEnergyFor(thrash_cat) } 
        and not { SwipeCat_6Targets() and SpellUsable(swipe_cat) and SpellCooldown(swipe_cat) < TimeToEnergyFor(swipe_cat) } 
        and { ComboPoints() < 5 and FeralMaintainShortCdPostConditions() 
            or ThrashCat_2Targets() and Spell(thrash_cat) 
            or not { ThrashCat_2Targets() and SpellUsable(thrash_cat) and SpellCooldown(thrash_cat) < TimeToEnergyFor(thrash_cat) } 
                and { BrutalSlash_UnderDesiredTargets() and Spell(brutal_slash) 
                    or ComboPoints() < 5 and Enemies() >= 3 and swipe_energy_pooling() and Spell(swipe_cat) 
                    or Shred() and Spell(shred) } }
}

AddFunction FeralGeneratorCdActions
{
    unless BrutalSlash_DesiredTargets() and Spell(brutal_slash)
    {
        #pool_resource,for_next=1
        #thrash_cat,if=talent.brutal_slash.enabled&spell_targets.thrash_cat>=9&variable.thrash_energy_pooling
        unless ThrashCat_BrutalSlashTalent() and SpellUsable(thrash_cat) and SpellCooldown(thrash_cat) < TimeToEnergyFor(thrash_cat)
        {
            #pool_resource,for_next=1
            #swipe_cat,if=spell_targets.swipe_cat>=6&variable.swipe_energy_pooling
            unless SwipeCat_6Targets() and SpellUsable(swipe_cat) and SpellCooldown(swipe_cat) < TimeToEnergyFor(swipe_cat)
            {
                #call_action_list,name=maintain,if=combo_points<5
                if ComboPoints() < 5 FeralMaintainCdActions()

                unless ComboPoints() < 5 and FeralMaintainCdPostConditions()
                {
                    #pool_resource,for_next=1
                    #thrash_cat,cycle_targets=1,if=remains<=duration*0.3&combo_points<5&spell_targets.thrash_cat>=2&variable.thrash_energy_pooling
                    unless target.DebuffRemaining(thrash_cat_debuff) <= BaseDuration(thrash_cat_debuff) * 0.3 and ComboPoints() < 5 and Enemies() >= 2 and thrash_energy_pooling() and SpellUsable(thrash_cat) and SpellCooldown(thrash_cat) < TimeToEnergyFor(thrash_cat)
                    {
                        unless BrutalSlash_UnderDesiredTargets() and Spell(brutal_slash) 
                            or SwipeCat_3Targets() and Spell(swipe_cat) 
                            or Shred() and Spell(shred)
                        {
                            #use_item,slot=trinket1,if=variable.buff_savage_roar_up&equipped.draught_of_souls
                            if DraughtOfSouls() FeralUseItemActions()
                        }
                    }
                }
            }
        }
    }
}

AddFunction FeralGeneratorCdPostConditions
{
    BrutalSlash_DesiredTargets() and Spell(brutal_slash) 
        or not { ThrashCat_BrutalSlashTalent() and SpellUsable(thrash_cat) and SpellCooldown(thrash_cat) < TimeToEnergyFor(thrash_cat) } 
            and not { SwipeCat_6Targets() and SpellUsable(swipe_cat) and SpellCooldown(swipe_cat) < TimeToEnergyFor(swipe_cat) } 
            and { ComboPoints() < 5 and FeralMaintainCdPostConditions() 
                or ThrashCat_2Targets() and Spell(thrash_cat) 
                or not { ThrashCat_2Targets() and SpellUsable(thrash_cat) and SpellCooldown(thrash_cat) < TimeToEnergyFor(thrash_cat) } 
            and { BrutalSlash_UnderDesiredTargets() and Spell(brutal_slash) 
                or ComboPoints() < 5 and Enemies() >= 3 and swipe_energy_pooling() and Spell(swipe_cat) 
                or Shred() and Spell(shred) } }
}

### actions.elunes_guidance

AddFunction FeralElunesGuidanceMainActions
{
}

AddFunction FeralElunesGuidanceMainPostConditions
{
}

AddFunction FeralElunesGuidanceShortCdActions
{
    #regrowth,if=variable.regrowth_conditions&talent.elunes_guidance.enabled&((cooldown.elunes_guidance.remains<gcd&combo_points=0)|(buff.elunes_guidance.up&combo_points>=4))
    if Regrowth_ElunesGuidance() Spell(regrowth)
    
    unless Regrowth_ElunesGuidance() and Spell(regrowth)
    {
        #pool_resource,if=talent.elunes_guidance.enabled&combo_points=0&energy<action.ferocious_bite.cost+25-energy.regen*cooldown.elunes_guidance.remains
        unless ElunesGuidance_Pooling()
        {
            #elunes_guidance,if=talent.elunes_guidance.enabled&combo_points=0&energy>=action.ferocious_bite.cost+25
            if ElunesGuidance() Spell(elunes_guidance)
        }
    }
}

AddFunction FeralElunesGuidanceShortCdPostConditions
{
    Regrowth_ElunesGuidance() and Spell(regrowth)
}

AddFunction FeralElunesGuidanceCdActions
{
}

AddFunction FeralElunesGuidanceCdPostConditions
{
    Regrowth_ElunesGuidance() and Spell(regrowth) 
        or not ElunesGuidance_Pooling() and ElunesGuidance() and Spell(elunes_guidance)
}

### actions.finisher

AddFunction FeralFinisherMainActions
{
    #rip,cycle_targets=1,if=(!ticking|(remains<variable.rip_refresh&target.health.pct>variable.execute_range)|persistent_multiplier>dot.rip.pmultiplier)&target.time_to_die-remains>tick_time*4
    if Rip() Spell(rip)
    #pool_resource,for_next=1
    #ferocious_bite,max_energy=1,cycle_targets=1,if=dot.rip.remains<variable.rip_refresh&target.health.pct<variable.execute_range
    if FerociousBite_9SecondRefresh() Spell(ferocious_bite extra_amount=25)
    unless FerociousBite_9SecondRefresh() and SpellUsable(ferocious_bite) and SpellCooldown(ferocious_bite) < TimeToEnergyFor(ferocious_bite) + 25 / EnergyRegenRate()
    {
        #pool_resource,for_next=1
        #savage_roar,if=(buff.savage_roar.remains<=7.2|(buff.savage_roar.remains<variable.savage_roar_refresh&target.health.pct>=25))
        if SavageRoar_Refresh() Spell(savage_roar)
        unless SavageRoar_Refresh() and SpellUsable(savage_roar) and SpellCooldown(savage_roar) < TimeToEnergyFor(savage_roar)
        {
            #pool_resource,for_next=1
            #maim,if=buff.fiery_red_maimers.up&variable.buff_bloodtalons_up&variable.buff_savage_roar_up
            if Maim() Spell(maim)
            unless Maim() and SpellUsable(maim) and SpellCooldown(maim) < TimeToEnergyFor(maim)
            {
                #pool_resource,for_next=1
                #ferocious_bite,max_energy=1
                Spell(ferocious_bite extra_amount=25)
            }
        }
    }
}

AddFunction FeralFinisherMainPostConditions
{
}

AddFunction FeralFinisherShortCdActions
{
}

AddFunction FeralFinisherShortCdPostConditions
{
    Rip() and Spell(rip) 
        or FerociousBite_9SecondRefresh() and Spell(ferocious_bite) or not { FerociousBite_9SecondRefresh() and SpellUsable(ferocious_bite) and SpellCooldown(ferocious_bite) < TimeToEnergyFor(ferocious_bite) + 25 / EnergyRegenRate() } 
        and { SavageRoar_Refresh() and Spell(savage_roar) or not { SavageRoar_Refresh() and SpellUsable(savage_roar) and SpellCooldown(savage_roar) < TimeToEnergyFor(savage_roar) } 
            and { Maim() and Spell(maim) or not { Maim() and SpellUsable(maim) and SpellCooldown(maim) < TimeToEnergyFor(maim) } and Energy() >= EnergyCost(ferocious_bite) + 25 and Spell(ferocious_bite) } }
}

AddFunction FeralFinisherCdActions
{
}

AddFunction FeralFinisherCdPostConditions
{
    Rip() and Spell(rip) 
        or FerociousBite_9SecondRefresh() and Spell(ferocious_bite) or not { FerociousBite_9SecondRefresh() and SpellUsable(ferocious_bite) and SpellCooldown(ferocious_bite) < TimeToEnergyFor(ferocious_bite) + 25 / EnergyRegenRate() } 
        and { SavageRoar_Refresh() and Spell(savage_roar) or not { SavageRoar_Refresh() and SpellUsable(savage_roar) and SpellCooldown(savage_roar) < TimeToEnergyFor(savage_roar) } 
            and { Maim() and Spell(maim) or not { Maim() and SpellUsable(maim) and SpellCooldown(maim) < TimeToEnergyFor(maim) } 
            and Energy() >= EnergyCost(ferocious_bite) + 25 and Spell(ferocious_bite) } }
}

### actions.incarn

AddFunction FeralIncarnMainActions
{
    #pool_resource,for_next=1
    #thrash_cat,cycle_targets=1,if=remains<=duration*0.3&spell_targets.thrash_cat>=5
    if ThrashCat_Incarn_5Targets() Spell(thrash_cat)
    unless ThrashCat_Incarn_5Targets() and SpellUsable(thrash_cat) and SpellCooldown(thrash_cat) < TimeToEnergyFor(thrash_cat)
    {
        #regrowth,if=talent.bloodtalons.enabled&buff.predatory_swiftness.up&buff.bloodtalons.down&(buff.predatory_swiftness.remains<1.5|((!dot.rip.ticking|(dot.rip.remains<(4.8+gcd)&target.health.pct>25&talent.jagged_wounds.enabled)|(dot.rip.remains<(7.2+gcd)&target.health.pct>25&talent.elunes_guidance.enabled)|action.rip.persistent_multiplier>dot.rip.pmultiplier)&target.time_to_die-dot.rip.remains>action.rip.tick_time*4&combo_points=5))
        if Regrowth_Expires_AF_EG_Incarn() Spell(regrowth)
        #pool_resource,for_next=1
        #swipe_cat,if=spell_targets.swipe_cat>=8
        if Enemies() >= 8 Spell(swipe_cat)
        unless Enemies() >= 8 and SpellUsable(swipe_cat) and SpellCooldown(swipe_cat) < TimeToEnergyFor(swipe_cat)
        {
            #pool_resource,for_next=1
            #rip,cycle_targets=1,if=(!ticking|(remains<4.8&target.health.pct>25&talent.jagged_wounds.enabled)|(remains<7.2&target.health.pct>25&talent.elunes_guidance.enabled)|persistent_multiplier>dot.rip.pmultiplier)&target.time_to_die-dot.rip.remains>tick_time*4&combo_points=5
            if Rip_Incarn() Spell(rip)
            unless Rip_Incarn() and SpellUsable(rip) and SpellCooldown(rip) < TimeToEnergyFor(rip)
            {
                #swipe_cat,if=combo_points=5&(spell_targets.swipe_cat>=6|(spell_targets.swipe_cat>=3&!talent.bloodtalons.enabled))&combo_points=5
                if SwipeCat_Incarn_5Targets() Spell(swipe_cat)
                #regrowth,if=talent.bloodtalons.enabled&buff.predatory_swiftness.up&buff.bloodtalons.down&combo_points=5&(dot.rip.remains<=(4.8+5*gcd)|cooldown.ashamanes_frenzy.remains<gcd)
                if Regrowth_Incarn_5CPs() Spell(regrowth)
                #maim,if=talent.bloodtalons.enabled&combo_points=5&buff.fiery_red_maimers.up&(dot.rip.remains<=(4.8+4*gcd)|cooldown.ashamanes_frenzy.remains<gcd)
                if Maim_Incarn() Spell(maim)
                #ferocious_bite,cycle_targets=1,if=talent.bloodtalons.enabled&combo_points=5&(dot.rip.remains<=(4.8+4*gcd)|cooldown.ashamanes_frenzy.remains<gcd)
                if FerociousBite_Incarn() Spell(ferocious_bite)
                #call_action_list,name=maintain
                FeralMaintainMainActions()

                unless FeralMaintainMainPostConditions()
                {
                    #shred
                    Spell(shred)
                }
            }
        }
    }
}

AddFunction FeralIncarnMainPostConditions
{
    not { ThrashCat_5Targets() and SpellUsable(thrash_cat) and SpellCooldown(thrash_cat) < TimeToEnergyFor(thrash_cat) } 
        and not { SwipeCat_8Targets() and SpellUsable(swipe_cat) and SpellCooldown(swipe_cat) < TimeToEnergyFor(swipe_cat) } 
        and not { Rip_Incarn() and SpellUsable(rip) and SpellCooldown(rip) < TimeToEnergyFor(rip) } 
        and FeralMaintainMainPostConditions()
}

AddFunction FeralIncarnShortCdActions
{
    #pool_resource,for_next=1
    #thrash_cat,cycle_targets=1,if=spell_targets.thrash_cat>=5&remains<=duration*0.3
    unless ThrashCat_5Targets() and SpellUsable(thrash_cat) and SpellCooldown(thrash_cat) < TimeToEnergyFor(thrash_cat)
    {
        unless Regrowth_Expires_AF_EG_Incarn() and Spell(regrowth)
        {
            #ashamanes_frenzy,if=combo_points<=2&buff.elunes_guidance.down&variable.buff_bloodtalons_up&variable.buff_savage_roar_up
            if CheckBoxOff(opt_ashamanes_frenzy_main_action) and AshamanesFrenzy() Spell(ashamanes_frenzy)
            #pool_resource,for_next=1
            #swipe_cat,if=spell_targets.swipe_cat>=8
            unless SwipeCat_8Targets() and SpellUsable(swipe_cat) and SpellCooldown(swipe_cat) < TimeToEnergyFor(swipe_cat)
            {
                #pool_resource,for_next=1
                #rip,cycle_targets=1,if=(!ticking|(remains<4.8&target.health.pct>25&talent.jagged_wounds.enabled)|(remains<7.2&target.health.pct>25&talent.elunes_guidance.enabled)|persistent_multiplier>dot.rip.pmultiplier)&target.time_to_die-dot.rip.remains>tick_time*4&combo_points=5
                unless Rip_Incarn() and SpellUsable(rip) and SpellCooldown(rip) < TimeToEnergyFor(rip)
                {
                    unless SwipeCat_Incarn_5Targets() and Spell(swipe_cat) or Regrowth_Incarn_5CPs() and Spell(regrowth) or Maim_Incarn() and Spell(maim) or FerociousBite_Incarn() and Spell(ferocious_bite)
                    {
                        #call_action_list,name=maintain
                        FeralMaintainShortCdActions()
                    }
                }
            }
        }
    }
}

AddFunction FeralIncarnShortCdPostConditions
{
    not { ThrashCat_5Targets() and SpellUsable(thrash_cat) and SpellCooldown(thrash_cat) < TimeToEnergyFor(thrash_cat) } 
        and { Regrowth_Expires_AF_EG_Incarn() and Spell(regrowth) 
                or not { SwipeCat_8Targets() and SpellUsable(swipe_cat) and SpellCooldown(swipe_cat) < TimeToEnergyFor(swipe_cat) } 
            and not { Rip_Incarn() and SpellUsable(rip) and SpellCooldown(rip) < TimeToEnergyFor(rip) } 
            and { SwipeCat_Incarn_5Targets() and Spell(swipe_cat) 
                or Regrowth_Incarn_5CPs() and Spell(regrowth) 
                or Maim_Incarn() and Spell(maim) 
                or FerociousBite_Incarn() and Spell(ferocious_bite) 
                or FeralMaintainShortCdPostConditions() 
                or Spell(shred) } }
}

AddFunction FeralIncarnCdActions
{
    #pool_resource,for_next=1
    #thrash_cat,cycle_targets=1,if=spell_targets.thrash_cat>=5&remains<=duration*0.3&variable.thrash_energy_pooling
    unless ThrashCat_5Targets() and SpellUsable(thrash_cat) and SpellCooldown(thrash_cat) < TimeToEnergyFor(thrash_cat)
    {
        unless Regrowth_Expires_AF_EG_Incarn() and Spell(regrowth) or CheckBoxOn(opt_ashamanes_frenzy_main_action) and AshamanesFrenzy() and Spell(ashamanes_frenzy)
        {
            #pool_resource,for_next=1
            #swipe_cat,if=spell_targets.swipe_cat>=6&variable.swipe_energy_pooling
            unless SwipeCat_8Targets() and SpellUsable(swipe_cat) and SpellCooldown(swipe_cat) < TimeToEnergyFor(swipe_cat)
            {
                #pool_resource,for_next=1
                #rip,cycle_targets=1,if=(!ticking|(remains<4.8&target.health.pct>25&talent.jagged_wounds.enabled)|(remains<7.2&target.health.pct>25&talent.elunes_guidance.enabled)|persistent_multiplier>dot.rip.pmultiplier)&target.time_to_die-dot.rip.remains>tick_time*4&combo_points=5
                unless Rip_Incarn() and SpellUsable(rip) and SpellCooldown(rip) < TimeToEnergyFor(rip)
                {
                    unless SwipeCat_Incarn_5Targets() and Spell(swipe_cat) or Regrowth_Incarn_5CPs() and Spell(regrowth) or Maim_Incarn() and Spell(maim) or FerociousBite_Incarn() and Spell(ferocious_bite)
                    {
                        #call_action_list,name=maintain
                        FeralMaintainCdActions()
                    }
                }
            }
        }
    }
}

AddFunction FeralIncarnCdPostConditions
{
    not { ThrashCat_5Targets() and SpellUsable(thrash_cat) and SpellCooldown(thrash_cat) < TimeToEnergyFor(thrash_cat) } 
    and { Regrowth_Expires_AF_EG_Incarn() and Spell(regrowth) 
        or CheckBoxOn(opt_ashamanes_frenzy_main_action) and AshamanesFrenzy() and Spell(ashamanes_frenzy) 
        or not { SwipeCat_8Targets() and SpellUsable(swipe_cat) and SpellCooldown(swipe_cat) < TimeToEnergyFor(swipe_cat) } 
        and not { Rip_Incarn() and SpellUsable(rip) and SpellCooldown(rip) < TimeToEnergyFor(rip) } 
        and { SwipeCat_Incarn_5Targets() and Spell(swipe_cat) 
            or Regrowth_Incarn_5CPs() and Spell(regrowth) 
            or Maim_Incarn() and Spell(maim) 
            or FerociousBite_Incarn() and Spell(ferocious_bite) 
            or FeralMaintainCdPostConditions() 
            or Spell(shred) } }
}

### actions.maintain

AddFunction FeralMaintainMainActions
{
    #pool_resource,for_next=1
    #rake,cycle_targets=1,if=(!ticking|(!talent.bloodtalons.enabled&remains<duration*0.3)|(talent.bloodtalons.enabled&buff.bloodtalons.up&remains<=variable.rake_refresh&persistent_multiplier>dot.rake.pmultiplier*0.80))&target.time_to_die-remains>tick_time
    if { not target.DebuffPresent(rake_debuff) or not Talent(bloodtalons_talent) and target.DebuffRemaining(rake_debuff) < BaseDuration(rake_debuff) * 0.3 or Talent(bloodtalons_talent) and BuffPresent(bloodtalons_buff) and target.DebuffRemaining(rake_debuff) <= rake_refresh() and PersistentMultiplier(rake_debuff) > target.DebuffPersistentMultiplier(rake_debuff) * 0.8 } and target.TimeToDie() - target.DebuffRemaining(rake_debuff) > target.TickTime(rake_debuff) Spell(rake)
    unless { not target.DebuffPresent(rake_debuff) or not Talent(bloodtalons_talent) and target.DebuffRemaining(rake_debuff) < BaseDuration(rake_debuff) * 0.3 or Talent(bloodtalons_talent) and BuffPresent(bloodtalons_buff) and target.DebuffRemaining(rake_debuff) <= rake_refresh() and PersistentMultiplier(rake_debuff) > target.DebuffPersistentMultiplier(rake_debuff) * 0.8 } and target.TimeToDie() - target.DebuffRemaining(rake_debuff) > target.TickTime(rake_debuff) and SpellUsable(rake) and SpellCooldown(rake) < TimeToEnergyFor(rake)
    {
        #moonfire_cat,cycle_targets=1,if=remains<=4.2&target.time_to_die-remains>tick_time*2
        if target.DebuffRemaining(moonfire_cat_debuff) <= 4.2 and target.TimeToDie() - target.DebuffRemaining(moonfire_cat_debuff) > target.TickTime(moonfire_cat_debuff) * 2 Spell(moonfire_cat)
        #pool_resource,for_next=1
        #thrash_cat,cycle_targets=1,if=set_bonus.tier19_4pc&remains<=duration*0.3&((buff.clearcasting.react&buff.bloodtalons.down)|(variable.clearcasting_or_high_energy&equipped.luffa_wrappings))
        if ArmorSetBonus(T19 4) and target.DebuffRemaining(thrash_cat_debuff) <= BaseDuration(thrash_cat_debuff) * 0.3 and { BuffPresent(clearcasting_buff) and BuffExpires(bloodtalons_buff) or clearcasting_or_high_energy() and HasEquippedItem(luffa_wrappings) } Spell(thrash_cat)
        unless ArmorSetBonus(T19 4) and target.DebuffRemaining(thrash_cat_debuff) <= BaseDuration(thrash_cat_debuff) * 0.3 and { BuffPresent(clearcasting_buff) and BuffExpires(bloodtalons_buff) or clearcasting_or_high_energy() and HasEquippedItem(luffa_wrappings) } and SpellUsable(thrash_cat) and SpellCooldown(thrash_cat) < TimeToEnergyFor(thrash_cat)
        {
            #thrash_cat,cycle_targets=1,if=!set_bonus.tier19_4pc&remains<=duration*0.3&(buff.clearcasting.react&equipped.luffa_wrappings&(equipped.ailuro_pouncers|buff.bloodtalons.down))
            if not ArmorSetBonus(T19 4) and target.DebuffRemaining(thrash_cat_debuff) <= BaseDuration(thrash_cat_debuff) * 0.3 and BuffPresent(clearcasting_buff) and HasEquippedItem(luffa_wrappings) and { HasEquippedItem(ailuro_pouncers) or BuffExpires(bloodtalons_buff) } Spell(thrash_cat)
        }
    }
}

AddFunction FeralMaintainMainPostConditions
{
}

AddFunction FeralMaintainShortCdActions
{
}

AddFunction FeralMaintainShortCdPostConditions
{
    { not target.DebuffPresent(rake_debuff) or not Talent(bloodtalons_talent) and target.DebuffRemaining(rake_debuff) < BaseDuration(rake_debuff) * 0.3 or Talent(bloodtalons_talent) and BuffPresent(bloodtalons_buff) and target.DebuffRemaining(rake_debuff) <= rake_refresh() and PersistentMultiplier(rake_debuff) > target.DebuffPersistentMultiplier(rake_debuff) * 0.8 } and target.TimeToDie() - target.DebuffRemaining(rake_debuff) > target.TickTime(rake_debuff) and Spell(rake) or not { { not target.DebuffPresent(rake_debuff) or not Talent(bloodtalons_talent) and target.DebuffRemaining(rake_debuff) < BaseDuration(rake_debuff) * 0.3 or Talent(bloodtalons_talent) and BuffPresent(bloodtalons_buff) and target.DebuffRemaining(rake_debuff) <= rake_refresh() and PersistentMultiplier(rake_debuff) > target.DebuffPersistentMultiplier(rake_debuff) * 0.8 } and target.TimeToDie() - target.DebuffRemaining(rake_debuff) > target.TickTime(rake_debuff) and SpellUsable(rake) and SpellCooldown(rake) < TimeToEnergyFor(rake) } and { target.DebuffRemaining(moonfire_cat_debuff) <= 4.2 and target.TimeToDie() - target.DebuffRemaining(moonfire_cat_debuff) > target.TickTime(moonfire_cat_debuff) * 2 and Spell(moonfire_cat) or ArmorSetBonus(T19 4) and target.DebuffRemaining(thrash_cat_debuff) <= BaseDuration(thrash_cat_debuff) * 0.3 and { BuffPresent(clearcasting_buff) and BuffExpires(bloodtalons_buff) or clearcasting_or_high_energy() and HasEquippedItem(luffa_wrappings) } and Spell(thrash_cat) or not { ArmorSetBonus(T19 4) and target.DebuffRemaining(thrash_cat_debuff) <= BaseDuration(thrash_cat_debuff) * 0.3 and { BuffPresent(clearcasting_buff) and BuffExpires(bloodtalons_buff) or clearcasting_or_high_energy() and HasEquippedItem(luffa_wrappings) } and SpellUsable(thrash_cat) and SpellCooldown(thrash_cat) < TimeToEnergyFor(thrash_cat) } and not ArmorSetBonus(T19 4) and target.DebuffRemaining(thrash_cat_debuff) <= BaseDuration(thrash_cat_debuff) * 0.3 and BuffPresent(clearcasting_buff) and HasEquippedItem(luffa_wrappings) and { HasEquippedItem(ailuro_pouncers) or BuffExpires(bloodtalons_buff) } and Spell(thrash_cat) }
}

AddFunction FeralMaintainCdActions
{
}

AddFunction FeralMaintainCdPostConditions
{
    { not target.DebuffPresent(rake_debuff) or not Talent(bloodtalons_talent) and target.DebuffRemaining(rake_debuff) < BaseDuration(rake_debuff) * 0.3 or Talent(bloodtalons_talent) and BuffPresent(bloodtalons_buff) and target.DebuffRemaining(rake_debuff) <= rake_refresh() and PersistentMultiplier(rake_debuff) > target.DebuffPersistentMultiplier(rake_debuff) * 0.8 } and target.TimeToDie() - target.DebuffRemaining(rake_debuff) > target.TickTime(rake_debuff) and Spell(rake) or not { { not target.DebuffPresent(rake_debuff) or not Talent(bloodtalons_talent) and target.DebuffRemaining(rake_debuff) < BaseDuration(rake_debuff) * 0.3 or Talent(bloodtalons_talent) and BuffPresent(bloodtalons_buff) and target.DebuffRemaining(rake_debuff) <= rake_refresh() and PersistentMultiplier(rake_debuff) > target.DebuffPersistentMultiplier(rake_debuff) * 0.8 } and target.TimeToDie() - target.DebuffRemaining(rake_debuff) > target.TickTime(rake_debuff) and SpellUsable(rake) and SpellCooldown(rake) < TimeToEnergyFor(rake) } and { target.DebuffRemaining(moonfire_cat_debuff) <= 4.2 and target.TimeToDie() - target.DebuffRemaining(moonfire_cat_debuff) > target.TickTime(moonfire_cat_debuff) * 2 and Spell(moonfire_cat) or ArmorSetBonus(T19 4) and target.DebuffRemaining(thrash_cat_debuff) <= BaseDuration(thrash_cat_debuff) * 0.3 and { BuffPresent(clearcasting_buff) and BuffExpires(bloodtalons_buff) or clearcasting_or_high_energy() and HasEquippedItem(luffa_wrappings) } and Spell(thrash_cat) or not { ArmorSetBonus(T19 4) and target.DebuffRemaining(thrash_cat_debuff) <= BaseDuration(thrash_cat_debuff) * 0.3 and { BuffPresent(clearcasting_buff) and BuffExpires(bloodtalons_buff) or clearcasting_or_high_energy() and HasEquippedItem(luffa_wrappings) } and SpellUsable(thrash_cat) and SpellCooldown(thrash_cat) < TimeToEnergyFor(thrash_cat) } and not ArmorSetBonus(T19 4) and target.DebuffRemaining(thrash_cat_debuff) <= BaseDuration(thrash_cat_debuff) * 0.3 and BuffPresent(clearcasting_buff) and HasEquippedItem(luffa_wrappings) and { HasEquippedItem(ailuro_pouncers) or BuffExpires(bloodtalons_buff) } and Spell(thrash_cat) }
}

### actions.opener

AddFunction FeralOpenerMainActions
{
    #rake,if=buff.prowl.up
    if BuffPresent(prowl_buff) Spell(rake)
    #savage_roar,if=buff.savage_roar.down
    if BuffExpires(savage_roar_buff) Spell(savage_roar)
    #regrowth,if=combo_points=5&buff.bloodtalons.down&buff.predatory_swiftness.up&!equipped.draught_of_souls
    if ComboPoints() == 5 and BuffExpires(bloodtalons_buff) and BuffPresent(predatory_swiftness_buff) and not HasEquippedItem(draught_of_souls) Spell(regrowth)
    #rip,if=combo_points=5&buff.bloodtalons.up&!equipped.draught_of_souls
    if ComboPoints() == 5 and BuffPresent(bloodtalons_buff) and not HasEquippedItem(draught_of_souls) Spell(rip)
    #thrash_cat,if=combo_points<5&!ticking&!equipped.draught_of_souls
    if ComboPoints() < 5 and not target.DebuffPresent(thrash_cat_debuff) and not HasEquippedItem(draught_of_souls) Spell(thrash_cat)
    #shred,if=combo_points<5&buff.savage_roar.up&!equipped.draught_of_souls
    if ComboPoints() < 5 and BuffPresent(savage_roar_buff) and not HasEquippedItem(draught_of_souls) Spell(shred)
}

AddFunction FeralOpenerMainPostConditions
{
}

AddFunction FeralOpenerShortCdActions
{
    unless BuffPresent(prowl_buff) and Spell(rake) or BuffExpires(savage_roar_buff) and Spell(savage_roar)
    {
        #tigers_fury,if=buff.berserk.up&!equipped.draught_of_souls
        if BuffPresent(berserk_cat_buff) and not HasEquippedItem(draught_of_souls) Spell(tigers_fury)
        #ashamanes_frenzy,if=buff.bloodtalons.up&!equipped.draught_of_souls
        if BuffPresent(bloodtalons_buff) and not HasEquippedItem(draught_of_souls) Spell(ashamanes_frenzy)
    }
}

AddFunction FeralOpenerShortCdPostConditions
{
    BuffPresent(prowl_buff) and Spell(rake) or BuffExpires(savage_roar_buff) and Spell(savage_roar) or ComboPoints() == 5 and BuffExpires(bloodtalons_buff) and BuffPresent(predatory_swiftness_buff) and not HasEquippedItem(draught_of_souls) and Spell(regrowth) or ComboPoints() == 5 and BuffPresent(bloodtalons_buff) and not HasEquippedItem(draught_of_souls) and Spell(rip) or ComboPoints() < 5 and not target.DebuffPresent(thrash_cat_debuff) and not HasEquippedItem(draught_of_souls) and Spell(thrash_cat) or ComboPoints() < 5 and BuffPresent(savage_roar_buff) and not HasEquippedItem(draught_of_souls) and Spell(shred)
}

AddFunction FeralOpenerCdActions
{
    unless BuffPresent(prowl_buff) and Spell(rake) or BuffExpires(savage_roar_buff) and Spell(savage_roar)
    {
        #berserk,if=buff.savage_roar.up&!equipped.draught_of_souls
        if BuffPresent(savage_roar_buff) and not HasEquippedItem(draught_of_souls) Spell(berserk_cat)
    }
}

AddFunction FeralOpenerCdPostConditions
{
    BuffPresent(prowl_buff) and Spell(rake) or BuffExpires(savage_roar_buff) and Spell(savage_roar) or BuffPresent(bloodtalons_buff) and not HasEquippedItem(draught_of_souls) and Spell(ashamanes_frenzy) or ComboPoints() == 5 and BuffExpires(bloodtalons_buff) and BuffPresent(predatory_swiftness_buff) and not HasEquippedItem(draught_of_souls) and Spell(regrowth) or ComboPoints() == 5 and BuffPresent(bloodtalons_buff) and not HasEquippedItem(draught_of_souls) and Spell(rip) or ComboPoints() < 5 and not target.DebuffPresent(thrash_cat_debuff) and not HasEquippedItem(draught_of_souls) and Spell(thrash_cat) or ComboPoints() < 5 and BuffPresent(savage_roar_buff) and not HasEquippedItem(draught_of_souls) and Spell(shred)
}

### actions.precombat

AddFunction FeralPrecombatMainActions
{
    #flask,type=flask_of_the_seventh_demon
    #food,type=nightborne_delicacy_platter
    #augmentation,type=defiled
    Spell(augmentation)
    #variable,name=rake_refresh,value=7
    #variable,name=rake_refresh,value=4.5-talent.jagged_wounds.enabled*1.485,if=equipped.ailuro_pouncers|talent.soul_of_the_forest.enabled
    #variable,name=rip_refresh,value=8
    #variable,name=savage_roar_refresh,value=7.2
    #variable,name=savage_roar_refresh,value=11,if=talent.jagged_wounds.enabled
    #variable,name=pooling,value=3
    #variable,name=pooling,value=10,if=equipped.chatoyant_signet
    #variable,name=execute_range,value=25
    #variable,name=execute_range,value=100,if=talent.sabertooth.enabled
    #variable,name=bt_stack,value=1
    #variable,name=bt_stack,value=2,if=equipped.ailuro_pouncers
    #regrowth,if=talent.bloodtalons.enabled
    if Talent(bloodtalons_talent) Spell(regrowth)
    #cat_form
    Spell(cat_form)
}

AddFunction FeralPrecombatMainPostConditions
{
}

AddFunction FeralPrecombatShortCdActions
{
    unless Spell(augmentation) or Talent(bloodtalons_talent) and Spell(regrowth) or Spell(cat_form)
    {
        #prowl
        Spell(prowl)
    }
}

AddFunction FeralPrecombatShortCdPostConditions
{
    Spell(augmentation) or Talent(bloodtalons_talent) and Spell(regrowth) or Spell(cat_form)
}

AddFunction FeralPrecombatCdActions
{
}

AddFunction FeralPrecombatCdPostConditions
{
    Spell(augmentation) or Talent(bloodtalons_talent) and Spell(regrowth) or Spell(cat_form)
}

### actions.sbt_opener

AddFunction FeralSbtOpenerMainActions
{
    #regrowth,if=talent.bloodtalons.enabled&combo_points=5&!buff.bloodtalons.up&!dot.rip.ticking
    if Talent(bloodtalons_talent) and ComboPoints() == 5 and not BuffPresent(bloodtalons_buff) and not target.DebuffPresent(rip_debuff) Spell(regrowth)
}

AddFunction FeralSbtOpenerMainPostConditions
{
}

AddFunction FeralSbtOpenerShortCdActions
{
    unless Talent(bloodtalons_talent) and ComboPoints() == 5 and not BuffPresent(bloodtalons_buff) and not target.DebuffPresent(rip_debuff) and Spell(regrowth)
    {
        #tigers_fury,if=!dot.rip.ticking&combo_points=5
        if not target.DebuffPresent(rip_debuff) and ComboPoints() == 5 Spell(tigers_fury)
    }
}

AddFunction FeralSbtOpenerShortCdPostConditions
{
    Talent(bloodtalons_talent) and ComboPoints() == 5 and not BuffPresent(bloodtalons_buff) and not target.DebuffPresent(rip_debuff) and Spell(regrowth)
}

AddFunction FeralSbtOpenerCdActions
{
}

AddFunction FeralSbtOpenerCdPostConditions
{
    Talent(bloodtalons_talent) and ComboPoints() == 5 and not BuffPresent(bloodtalons_buff) and not target.DebuffPresent(rip_debuff) and Spell(regrowth)
}

### Feral icons.

AddCheckBox(opt_druid_feral_aoe L(AOE) default specialization=feral)

AddIcon checkbox=!opt_druid_feral_aoe enemies=1 help=shortcd specialization=feral
{
    if not InCombat() FeralPrecombatShortCdActions()
    unless not InCombat() and FeralPrecombatShortCdPostConditions()
    {
        FeralDefaultShortCdActions()
    }
}

AddIcon checkbox=opt_druid_feral_aoe help=shortcd specialization=feral
{
    if not InCombat() FeralPrecombatShortCdActions()
    unless not InCombat() and FeralPrecombatShortCdPostConditions()
    {
        FeralDefaultShortCdActions()
    }
}

AddIcon enemies=1 help=main specialization=feral
{
    if not InCombat() FeralPrecombatMainActions()
    unless not InCombat() and FeralPrecombatMainPostConditions()
    {
        FeralDefaultMainActions()
    }
}

AddIcon checkbox=opt_druid_feral_aoe help=aoe specialization=feral
{
    if not InCombat() FeralPrecombatMainActions()
    unless not InCombat() and FeralPrecombatMainPostConditions()
    {
        FeralDefaultMainActions()
    }
}

AddIcon checkbox=!opt_druid_feral_aoe enemies=1 help=cd specialization=feral
{
    if not InCombat() FeralPrecombatCdActions()
    unless not InCombat() and FeralPrecombatCdPostConditions()
    {
        FeralDefaultCdActions()
    }
}

AddIcon checkbox=opt_druid_feral_aoe help=cd specialization=feral
{
    if not InCombat() FeralPrecombatCdActions()
    unless not InCombat() and FeralPrecombatCdPostConditions()
    {
        FeralDefaultCdActions()
    }
}

### Required symbols
# ailuro_pouncers
# ashamanes_energy_buff
# ashamanes_frenzy
# augmentation
# berserk_cat
# berserk_cat_buff
# bloodtalons_buff
# bloodtalons_talent
# brutal_slash
# brutal_slash_talent
# cat_form
# cat_form_buff
# chatoyant_signet
# clearcasting_buff
# convergence_of_fates
# dash
# displacer_beast
# displacer_beast_buff
# draught_of_souls
# elunes_guidance
# elunes_guidance_buff
# elunes_guidance_talent
# ferocious_bite
# fiery_red_maimers_buff
# incarnation_king_of_the_jungle
# incarnation_king_of_the_jungle_buff
# incarnation_talent
# jagged_wounds_talent
# luffa_wrappings
# maim
# mangle
# mighty_bash
# moonfire_cat
# moonfire_cat_debuff
# predatory_swiftness_buff
# prowl
# prowl_buff
# rake
# rake_debuff
# regrowth
# rip
# rip_debuff
# sabertooth_talent
# savage_roar
# savage_roar_buff
# savage_roar_talent
# scent_of_blood_buff
# shadowmeld
# shadowmeld_buff
# shred
# skull_bash
# soul_of_the_forest_talent
# swipe_cat
# thrash_cat
# thrash_cat_debuff
# tigers_fury
# tigers_fury_buff
# typhoon
# variable_debuff
# war_stomp
# wild_charge
# wild_charge_bear
# wild_charge_cat
